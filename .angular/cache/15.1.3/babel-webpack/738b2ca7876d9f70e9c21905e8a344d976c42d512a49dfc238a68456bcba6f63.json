{"ast":null,"code":"import { HttpHeaders } from \"@angular/common/http\";\nimport { GLOBAL } from \"./global\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\n//import { Products } from \"../models/products\";\nexport class ProductsService {\n  constructor(_http) {\n    this._http = _http;\n    this.url = GLOBAL.url;\n  }\n  /**\r\n   * Consume el API, Crear producto\r\n   *\r\n   * @param any token\r\n   * @param any products\r\n   * Observable\r\n   * @autor Christian Felipe Martinez Castaño\r\n   *\r\n   */\n  create(token, products) {\n    let jsonProducts = JSON.stringify(products);\n    let params = 'json=' + jsonProducts;\n    let headers = new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded').set('Authorization', token);\n    return this._http.post(this.url + 'products', params, {\n      headers: headers\n    });\n  }\n  /**\r\n   * Consume el API, trae el listado de productos\r\n   *\r\n   * @param any token\r\n   * Observable\r\n   * @autor Christian Felipe Martinez Castaño\r\n   *\r\n   */\n  getProducts(token) {\n    let headers = new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded').set('Authorization', token);\n    return this._http.get(this.url + 'products', {\n      headers: headers\n    });\n  }\n}\nProductsService.ɵfac = function ProductsService_Factory(t) {\n  return new (t || ProductsService)(i0.ɵɵinject(i1.HttpClient));\n};\nProductsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProductsService,\n  factory: ProductsService.ɵfac\n});","map":{"version":3,"mappings":"AAOA,SAAqBA,WAAW,QAAQ,sBAAsB;AAE9D,SAASC,MAAM,QAAQ,UAAU;;;AACjC;AAGA,OAAM,MAAOC,eAAe;EAG1BC,YACSC,KAAiB;IAAjB,UAAK,GAALA,KAAK;IAEZ,IAAI,CAACC,GAAG,GAAGJ,MAAM,CAACI,GAAG;EACvB;EAEA;;;;;;;;;EASAC,MAAM,CAACC,KAAS,EAAEC,QAAa;IAE7B,IAAIC,YAAY,GAAGC,IAAI,CAACC,SAAS,CAACH,QAAQ,CAAC;IAC3C,IAAII,MAAM,GAAG,OAAO,GAACH,YAAY;IACjC,IAAII,OAAO,GAAG,IAAIb,WAAW,EAAE,CAACc,GAAG,CAAC,cAAc,EAAE,mCAAmC,CAAC,CACxDA,GAAG,CAAC,eAAe,EAAEP,KAAK,CAAC;IAE3D,OAAO,IAAI,CAACH,KAAK,CAACW,IAAI,CAAC,IAAI,CAACV,GAAG,GAAC,UAAU,EAAEO,MAAM,EAAE;MAACC,OAAO,EAAEA;IAAO,CAAC,CAAC;EAEzE;EAGA;;;;;;;;EASAG,WAAW,CAACT,KAAS;IAEnB,IAAIM,OAAO,GAAG,IAAIb,WAAW,EAAE,CAACc,GAAG,CAAC,cAAc,EAAE,mCAAmC,CAAC,CACxDA,GAAG,CAAC,eAAe,EAAEP,KAAK,CAAC;IAE3D,OAAO,IAAI,CAACH,KAAK,CAACa,GAAG,CAAC,IAAI,CAACZ,GAAG,GAAC,UAAU,EAAG;MAACQ,OAAO,EAAEA;IAAO,CAAC,CAAC;EAEjE;;AA9CWX,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAgB,SAAfhB,eAAe;AAAA","names":["HttpHeaders","GLOBAL","ProductsService","constructor","_http","url","create","token","products","jsonProducts","JSON","stringify","params","headers","set","post","getProducts","get","factory"],"sourceRoot":"","sources":["C:\\wamp\\www\\Mejora_Soluciones\\client-angular\\src\\app\\services\\products.services.ts"],"sourcesContent":["/**\r\n *\r\n * @autor Christian Felipe Martinez Castaño\r\n * 2023\r\n *\r\n */\r\nimport { Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs\";\r\nimport { GLOBAL } from \"./global\";\r\n//import { Products } from \"../models/products\";\r\n\r\n@Injectable()\r\nexport class ProductsService {\r\n  public url: string;\r\n\r\n  constructor(\r\n    public _http: HttpClient\r\n  ){\r\n    this.url = GLOBAL.url\r\n  }\r\n\r\n  /**\r\n   * Consume el API, Crear producto\r\n   *\r\n   * @param any token\r\n   * @param any products\r\n   * Observable\r\n   * @autor Christian Felipe Martinez Castaño\r\n   *\r\n   */\r\n  create(token:any, products: any):Observable<any>{\r\n\r\n    let jsonProducts = JSON.stringify(products);\r\n    let params = 'json='+jsonProducts;\r\n    let headers = new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded')\r\n                                   .set('Authorization', token);\r\n\r\n    return this._http.post(this.url+'products', params, {headers: headers});\r\n\r\n  }\r\n\r\n\r\n  /**\r\n   * Consume el API, trae el listado de productos\r\n   *\r\n   * @param any token\r\n   * Observable\r\n   * @autor Christian Felipe Martinez Castaño\r\n   *\r\n   */\r\n\r\n  getProducts(token:any):Observable<any>{\r\n\r\n    let headers = new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded')\r\n                                   .set('Authorization', token);\r\n\r\n    return this._http.get(this.url+'products',  {headers: headers});\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}