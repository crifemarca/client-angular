{"ast":null,"code":"import { HttpHeaders } from \"@angular/common/http\";\nimport { GLOBAL } from \"./global\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProductsService {\n  constructor(_http) {\n    this._http = _http;\n    this.url = GLOBAL.url;\n  }\n  /**\r\n   * Consume el API, Crear producto\r\n   *\r\n   * @param any token\r\n   * @param any products\r\n   * Observable\r\n   * @autor Christian Felipe Martinez Castaño\r\n   *\r\n   */\n  create(token, products) {\n    let params = {\n      'title': products.title,\n      'description': products.description,\n      'price': products.price,\n      'status': products.status,\n      'user_id': products.user_id\n    };\n    let headers = new HttpHeaders().set('Content-Type', 'application/json').set('Authorization', token);\n    return this._http.post(this.url + 'products', params, {\n      headers: headers\n    });\n  }\n  /**\r\n   * Consume el API, trae el listado de productos\r\n   *\r\n   * @param any token\r\n   * Observable\r\n   * @autor Christian Felipe Martinez Castaño\r\n   *\r\n   */\n  getProducts(token) {\n    let headers = new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded').set('Authorization', token);\n    return this._http.get(this.url + 'products', {\n      headers: headers\n    });\n  }\n  /**\r\n   * Consume el API, trae el detalle de un producto\r\n   *\r\n   * @param any token\r\n   * @param any id\r\n   * Observable\r\n   * @autor Christian Felipe Martinez Castaño\r\n   *\r\n   */\n  getProduct(token, id) {\n    let headers = new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded').set('Authorization', token);\n    return this._http.get(this.url + 'products/' + id, {\n      headers: headers\n    });\n  }\n  /**\r\n   * Consume el API, Actualizar producto\r\n   *\r\n   * @param any token\r\n   * @param any products\r\n   * @param any id\r\n   * Observable\r\n   * @autor Christian Felipe Martinez Castaño\r\n   *\r\n   */\n  update(token, products, id) {\n    let jsonProducts = JSON.stringify(products);\n    let params = 'json=' + jsonProducts;\n    let headers = new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded').set('Authorization', token);\n    return this._http.put(this.url + 'products/' + id, params, {\n      headers: headers\n    });\n  }\n  /**\r\n   * Consume el API, borrar un producto\r\n   *\r\n   * @param any token\r\n   * @param any id\r\n   * Observable\r\n   * @autor Christian Felipe Martinez Castaño\r\n   *\r\n   */\n  delete(token, id) {\n    let headers = new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded').set('Authorization', token);\n    return this._http.delete(this.url + 'products/' + id, {\n      headers: headers\n    });\n  }\n}\nProductsService.ɵfac = function ProductsService_Factory(t) {\n  return new (t || ProductsService)(i0.ɵɵinject(i1.HttpClient));\n};\nProductsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProductsService,\n  factory: ProductsService.ɵfac\n});","map":{"version":3,"mappings":"AAOA,SAAqBA,WAAW,QAAQ,sBAAsB;AAE9D,SAASC,MAAM,QAAQ,UAAU;;;AAGjC,OAAM,MAAOC,eAAe;EAG1BC,YACSC,KAAiB;IAAjB,UAAK,GAALA,KAAK;IAEZ,IAAI,CAACC,GAAG,GAAGJ,MAAM,CAACI,GAAG;EACvB;EAEA;;;;;;;;;EASAC,MAAM,CAACC,KAAS,EAAEC,QAAa;IAG7B,IAAIC,MAAM,GAAG;MACX,OAAO,EAAED,QAAQ,CAACE,KAAK;MACvB,aAAa,EAAEF,QAAQ,CAACG,WAAW;MACnC,OAAO,EAAEH,QAAQ,CAACI,KAAK;MACvB,QAAQ,EAAEJ,QAAQ,CAACK,MAAM;MACzB,SAAS,EAAEL,QAAQ,CAACM;KACrB;IAED,IAAIC,OAAO,GAAG,IAAIf,WAAW,EAAE,CAACgB,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CACvCA,GAAG,CAAC,eAAe,EAAET,KAAK,CAAC;IAE3D,OAAO,IAAI,CAACH,KAAK,CAACa,IAAI,CAAC,IAAI,CAACZ,GAAG,GAAC,UAAU,EAAEI,MAAM,EAAE;MAACM,OAAO,EAAEA;IAAO,CAAC,CAAC;EAEzE;EAEA;;;;;;;;EASAG,WAAW,CAACX,KAAS;IAGnB,IAAIQ,OAAO,GAAG,IAAIf,WAAW,EAAE,CAACgB,GAAG,CAAC,cAAc,EAAE,mCAAmC,CAAC,CACxDA,GAAG,CAAC,eAAe,EAAET,KAAK,CAAC;IAE3D,OAAO,IAAI,CAACH,KAAK,CAACe,GAAG,CAAC,IAAI,CAACd,GAAG,GAAC,UAAU,EAAG;MAACU,OAAO,EAAEA;IAAO,CAAC,CAAC;EAEjE;EAEA;;;;;;;;;EAUAK,UAAU,CAACb,KAAS,EAAEc,EAAM;IAG1B,IAAIN,OAAO,GAAG,IAAIf,WAAW,EAAE,CAACgB,GAAG,CAAC,cAAc,EAAE,mCAAmC,CAAC,CACxDA,GAAG,CAAC,eAAe,EAAET,KAAK,CAAC;IAE3D,OAAO,IAAI,CAACH,KAAK,CAACe,GAAG,CAAC,IAAI,CAACd,GAAG,GAAG,WAAW,GAAGgB,EAAE,EAAG;MAACN,OAAO,EAAEA;IAAO,CAAC,CAAC;EAEzE;EAEA;;;;;;;;;;EAUAO,MAAM,CAACf,KAAS,EAAEC,QAAa,EAAEa,EAAM;IAGrC,IAAIE,YAAY,GAAGC,IAAI,CAACC,SAAS,CAACjB,QAAQ,CAAC;IAC3C,IAAIC,MAAM,GAAG,OAAO,GAACc,YAAY;IACjC,IAAIR,OAAO,GAAG,IAAIf,WAAW,EAAE,CAACgB,GAAG,CAAC,cAAc,EAAE,mCAAmC,CAAC,CACvDA,GAAG,CAAC,eAAe,EAAET,KAAK,CAAC;IAE5D,OAAO,IAAI,CAACH,KAAK,CAACsB,GAAG,CAAC,IAAI,CAACrB,GAAG,GAAC,WAAW,GAAGgB,EAAE,EAAEZ,MAAM,EAAE;MAACM,OAAO,EAAEA;IAAO,CAAC,CAAC;EAE9E;EAEA;;;;;;;;;EASAY,MAAM,CAACpB,KAAS,EAAEc,EAAM;IAGtB,IAAIN,OAAO,GAAG,IAAIf,WAAW,EAAE,CAACgB,GAAG,CAAC,cAAc,EAAE,mCAAmC,CAAC,CACvDA,GAAG,CAAC,eAAe,EAAET,KAAK,CAAC;IAE5D,OAAO,IAAI,CAACH,KAAK,CAACuB,MAAM,CAAC,IAAI,CAACtB,GAAG,GAAC,WAAW,GAAGgB,EAAE,EAAE;MAACN,OAAO,EAAEA;IAAO,CAAC,CAAC;EAEzE;;AAlHWb,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAA0B,SAAf1B,eAAe;AAAA","names":["HttpHeaders","GLOBAL","ProductsService","constructor","_http","url","create","token","products","params","title","description","price","status","user_id","headers","set","post","getProducts","get","getProduct","id","update","jsonProducts","JSON","stringify","put","delete","factory"],"sourceRoot":"","sources":["C:\\wamp\\www\\Mejora_Soluciones\\client-angular\\src\\app\\services\\products.services.ts"],"sourcesContent":["/**\r\n *\r\n * @autor Christian Felipe Martinez Castaño\r\n * 2023\r\n *\r\n */\r\nimport { Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs\";\r\nimport { GLOBAL } from \"./global\";\r\n\r\n@Injectable()\r\nexport class ProductsService {\r\n  public url: string;\r\n\r\n  constructor(\r\n    public _http: HttpClient\r\n  ){\r\n    this.url = GLOBAL.url\r\n  }\r\n\r\n  /**\r\n   * Consume el API, Crear producto\r\n   *\r\n   * @param any token\r\n   * @param any products\r\n   * Observable\r\n   * @autor Christian Felipe Martinez Castaño\r\n   *\r\n   */\r\n  create(token:any, products: any):Observable<any>\r\n  {\r\n\r\n    let params = {\r\n      'title': products.title,\r\n      'description': products.description,\r\n      'price': products.price,\r\n      'status': products.status,\r\n      'user_id': products.user_id\r\n    }\r\n\r\n    let headers = new HttpHeaders().set('Content-Type', 'application/json')\r\n                                   .set('Authorization', token);\r\n\r\n    return this._http.post(this.url+'products', params, {headers: headers});\r\n\r\n  }\r\n\r\n  /**\r\n   * Consume el API, trae el listado de productos\r\n   *\r\n   * @param any token\r\n   * Observable\r\n   * @autor Christian Felipe Martinez Castaño\r\n   *\r\n   */\r\n\r\n  getProducts(token:any):Observable<any>\r\n  {\r\n\r\n    let headers = new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded')\r\n                                   .set('Authorization', token);\r\n\r\n    return this._http.get(this.url+'products',  {headers: headers});\r\n\r\n  }\r\n\r\n  /**\r\n   * Consume el API, trae el detalle de un producto\r\n   *\r\n   * @param any token\r\n   * @param any id\r\n   * Observable\r\n   * @autor Christian Felipe Martinez Castaño\r\n   *\r\n   */\r\n\r\n  getProduct(token:any, id:any):Observable<any>\r\n  {\r\n\r\n    let headers = new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded')\r\n                                   .set('Authorization', token);\r\n\r\n    return this._http.get(this.url + 'products/' + id,  {headers: headers});\r\n\r\n  }\r\n\r\n  /**\r\n   * Consume el API, Actualizar producto\r\n   *\r\n   * @param any token\r\n   * @param any products\r\n   * @param any id\r\n   * Observable\r\n   * @autor Christian Felipe Martinez Castaño\r\n   *\r\n   */\r\n  update(token:any, products: any, id:any):Observable<any>\r\n  {\r\n\r\n    let jsonProducts = JSON.stringify(products);\r\n    let params = 'json='+jsonProducts;\r\n    let headers = new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded')\r\n                                    .set('Authorization', token);\r\n\r\n    return this._http.put(this.url+'products/' + id, params, {headers: headers});\r\n\r\n  }\r\n\r\n  /**\r\n   * Consume el API, borrar un producto\r\n   *\r\n   * @param any token\r\n   * @param any id\r\n   * Observable\r\n   * @autor Christian Felipe Martinez Castaño\r\n   *\r\n   */\r\n  delete(token:any, id:any):Observable<any>\r\n  {\r\n\r\n    let headers = new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded')\r\n                                    .set('Authorization', token);\r\n\r\n    return this._http.delete(this.url+'products/' + id, {headers: headers});\r\n\r\n  }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}